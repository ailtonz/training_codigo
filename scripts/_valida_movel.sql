declare @validarMovel as varchar(50)

set @validarMovel =
(
SELECT 
	SUM(CAST(T.QTDREGISTROS AS FLOAT)) AS QTDREGISTROS 
FROM 
	(
		--FATURAS NOVAS 
		SELECT 
			count(*) as qtdRegistros , 'NOVAS' as Tipo
		FROM
						[DB_SISCOB].[FILE_CAR].[TB_TRATAMENTO_MOVEL_WEB]	TM
			INNER JOIN  [DB_SISCOB].[FILE_CAR].[TB_CAR_MOVEL_IMPORT]		MV	ON TM.ID_IMPORT_MOVEL = MV.ID
			LEFT JOIN	[DB_SISCOB].[CONSOLIDADO].[TB_CONSOLIDADO]			C	ON 
																					TM.PROCV = C.PROCV 
																				AND	C.ID_PERIODO = 13 -- @Id_Per2 --<<<<<<<<<<<<<<<< PERIODO
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			FH	ON TM.ID_FX_FECHO	= FH.ID 
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			AR	ON TM.ID_FX_ARRECADA = AR.ID
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			FN	ON TM.ID_FX_FORNECE =  FN.ID  
		WHERE
			  TM.CHECK_CAR IS NULL
			  AND TM.OK = 1		

	UNION

		-- FATURAS EXISTENTES
		SELECT 
			count(*) as qtdRegistros , 'EXISTENTES' as Tipo
		FROM
						[DB_SISCOB].[CONSOLIDADO].[TB_CONSOLIDADO]			TC	
			INNER JOIN	[DB_SISCOB].[FILE_CAR].[TB_TRATAMENTO_MOVEL_WEB]	TM ON TC.PROCV				= TM.PROCV
			INNER JOIN  [DB_SISCOB].[FILE_CAR].[TB_CAR_MOVEL_IMPORT]		MV ON TM.ID_IMPORT_MOVEL	= MV.ID
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			FH ON TM.ID_FX_FECHO		= FH.ID 
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			AR ON TM.ID_FX_ARRECADA		= AR.ID
			LEFT  JOIN	[DB_SISCOB].[AUXILIAR].[TB_DESCRICAO_AGING]			FN ON TM.ID_FX_FORNECE		= FN.ID 
	
		WHERE
			
				TM.OK			= 1
			AND TC.ID_PERIODO	= 13 -- @Id_Per2 --<<<<<<<<<<<<<<<< PERIODO
			AND TC.ID_SEGMENTO	= 2
			AND TM.CHECK_CAR	= 1

	UNION

		SELECT concat('-',count(*)) AS qtdRegistros
			,CASE ISNULL(CHECK_CAR,0)
					WHEN 0 THEN 'NOVAS'
					WHEN 1 THEN 'EXISTENTES'
					ELSE 'SEM CLASSIFICACAO'
					end  as Tipo
		FROM [DB_SISCOB].[FILE_CAR].[TB_TRATAMENTO_MOVEL_WEB]
		WHERE ok = 1
		GROUP BY CHECK_CAR
	) t
)

if @validarMovel = 0 
begin
	print 'ok!';
end
else
begin
	print 'n.ok!';
end 